// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package org.datacite.mds.domain;

import java.util.List;
import java.util.Random;
import org.datacite.mds.domain.DatacentreDataOnDemand;
import org.datacite.mds.domain.Dataset;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Component;
import org.springframework.transaction.annotation.Propagation;
import org.springframework.transaction.annotation.Transactional;

privileged aspect DatasetDataOnDemand_Roo_DataOnDemand {
    
    declare @type: DatasetDataOnDemand: @Component;
    
    private Random DatasetDataOnDemand.rnd = new java.security.SecureRandom();
    
    private List<Dataset> DatasetDataOnDemand.data;
    
    @Autowired
    private DatacentreDataOnDemand DatasetDataOnDemand.datacentreDataOnDemand;
    
    public Dataset DatasetDataOnDemand.getNewTransientDataset(int index) {
        org.datacite.mds.domain.Dataset obj = new org.datacite.mds.domain.Dataset();
        obj.setDatacentre(datacentreDataOnDemand.getRandomDatacentre());
        java.lang.String doi = "doixxxx_" + index;
        if (doi.length() > 255) {
            doi  = doi.substring(0, 255);
        }
        obj.setDoi(doi);
        obj.setIsActive(new Boolean(true));
        obj.setIsRefQuality(new Boolean(true));
        java.lang.Integer lastLandingPageStatus = new Integer(index);
        if (lastLandingPageStatus < 100 || lastLandingPageStatus > 510) {
            lastLandingPageStatus = 510;
        }
        obj.setLastLandingPageStatus(lastLandingPageStatus);
        obj.setLastLandingPageStatusCheck(new java.util.Date());
        obj.setLastMetadataStatus("lastMetadataStatus_" + index);
        return obj;
    }
    
    public Dataset DatasetDataOnDemand.getSpecificDataset(int index) {
        init();
        if (index < 0) index = 0;
        if (index > (data.size() - 1)) index = data.size() - 1;
        Dataset obj = data.get(index);
        return Dataset.findDataset(obj.getId());
    }
    
    public Dataset DatasetDataOnDemand.getRandomDataset() {
        init();
        Dataset obj = data.get(rnd.nextInt(data.size()));
        return Dataset.findDataset(obj.getId());
    }
    
    public boolean DatasetDataOnDemand.modifyDataset(Dataset obj) {
        return false;
    }
    
    @Transactional(propagation = Propagation.REQUIRES_NEW)
    public void DatasetDataOnDemand.init() {
        if (data != null && !data.isEmpty()) {
            return;
        }
        
        data = org.datacite.mds.domain.Dataset.findDatasetEntries(0, 10);
        if (data == null) throw new IllegalStateException("Find entries implementation for 'Dataset' illegally returned null");
        if (!data.isEmpty()) {
            return;
        }
        
        data = new java.util.ArrayList<org.datacite.mds.domain.Dataset>();
        for (int i = 0; i < 10; i++) {
            org.datacite.mds.domain.Dataset obj = getNewTransientDataset(i);
            obj.persist();
            data.add(obj);
        }
    }
    
}
