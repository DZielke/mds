// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package org.datacite.mds.domain;

import java.util.List;
import java.util.Random;
import org.datacite.mds.domain.DatasetDataOnDemand;
import org.datacite.mds.domain.Metadata;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Component;
import org.springframework.transaction.annotation.Propagation;
import org.springframework.transaction.annotation.Transactional;

privileged aspect MetadataDataOnDemand_Roo_DataOnDemand {
    
    declare @type: MetadataDataOnDemand: @Component;
    
    private Random MetadataDataOnDemand.rnd = new java.security.SecureRandom();
    
    private List<Metadata> MetadataDataOnDemand.data;
    
    @Autowired
    private DatasetDataOnDemand MetadataDataOnDemand.datasetDataOnDemand;
    
    public Metadata MetadataDataOnDemand.getNewTransientMetadata(int index) {
        org.datacite.mds.domain.Metadata obj = new org.datacite.mds.domain.Metadata();
        obj.setDataset(datasetDataOnDemand.getRandomDataset());
        obj.setLastUpdated(new java.util.Date());
        java.lang.Integer metadataVersion = new Integer(index);
        if (metadataVersion < 0) {
            metadataVersion = 0;
        }
        obj.setMetadataVersion(metadataVersion);
        obj.setXml(null);
        return obj;
    }
    
    public Metadata MetadataDataOnDemand.getSpecificMetadata(int index) {
        init();
        if (index < 0) index = 0;
        if (index > (data.size() - 1)) index = data.size() - 1;
        Metadata obj = data.get(index);
        return Metadata.findMetadata(obj.getId());
    }
    
    public Metadata MetadataDataOnDemand.getRandomMetadata() {
        init();
        Metadata obj = data.get(rnd.nextInt(data.size()));
        return Metadata.findMetadata(obj.getId());
    }
    
    public boolean MetadataDataOnDemand.modifyMetadata(Metadata obj) {
        return false;
    }
    
    @Transactional(propagation = Propagation.REQUIRES_NEW)
    public void MetadataDataOnDemand.init() {
        if (data != null && !data.isEmpty()) {
            return;
        }
        
        data = org.datacite.mds.domain.Metadata.findMetadataEntries(0, 10);
        if (data == null) throw new IllegalStateException("Find entries implementation for 'Metadata' illegally returned null");
        if (!data.isEmpty()) {
            return;
        }
        
        data = new java.util.ArrayList<org.datacite.mds.domain.Metadata>();
        for (int i = 0; i < 10; i++) {
            org.datacite.mds.domain.Metadata obj = getNewTransientMetadata(i);
            obj.persist();
            data.add(obj);
        }
    }
    
}
